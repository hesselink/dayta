version: 2.1
jobs:
  build:
    docker:
      - image: fpco/stack-build:lts-18
    steps:
      - checkout
      - restore_cache:
          # Read about caching dependencies: https://circleci.com/docs/2.0/caching/
          name: Restore Cached Dependencies
          keys:
            - circle-cache
      - run:
          name: Install node
          command: |
            cd $HOME
            apt-get update
            apt-get install -y curl
            curl -O https://nodejs.org/dist/v16.14.0/node-v16.14.0-linux-x64.tar.xz
            tar xf node-v16.14.0-linux-x64.tar.xz
            echo 'export PATH=$HOME/node-v16.14.0-linux-x64/bin:$PATH' >> $BASH_ENV
      - run:
          name: Install libpq
          command: apt-get install -y libpq-dev
      - run:
          name: Update submodules
          command: git submodule update --init
      - run:
          name: Install Client Dependencies
          command: cd client && npm install
      - run:
          name: Build Client
          command: cd client && npx webpack
      - run:
          name: Resolve/Update Server Dependencies
          command: cd server && stack --no-terminal setup
      - run:
          name: Run Server Tests
          command: cd server && stack --no-terminal test
      - run:
          name: Install Server Executable
          command: cd server && stack --no-terminal install
      - save_cache:
          name: Cache Dependencies
          key: circle-cache
          paths:
            - "~/.stack"
            - "server/.stack-work"
            - "client/node_modules"
      - store_artifacts:
          # Upload test summary for display in Artifacts: https://circleci.com/docs/2.0/artifacts/ 
          path: ~/.local/bin/dayta-exe
          destination: dayta-exe
      - store_artifacts:
          path: client/dist/
          destination: client
      - run:
          name: Store Build Number
          command: mkdir -p workspace && echo $CIRCLE_BUILD_NUM > workspace/build_num
      - persist_to_workspace:
          root: workspace
          paths:
            - build_num

  deploy:
    machine:
      enabled: true
    steps:
      - attach_workspace:
          at: workspace
      - run:
          name: Deploy Over SSH
          command: |
            ssh $SSH_USER@$SSH_HOST "./scripts/deploy.py $(cat workspace/build_num)"

workflows:
  version: 2
  build-and-deploy:
    jobs:
      - build
      - deploy:
          requires:
            - build
          filters:
            branches:
              only: master
